{"version":3,"sources":["images/bottle.png","images/bag.png","images/compost.png","App.js","reportWebVitals.js","index.js"],"names":["mainPrimaryColor","lightBlue","mainSecondaryColor","deepOrange","darkTheme","createMuiTheme","palette","type","primary","main","secondary","typography","fontSize","fontFamily","join","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","left","paper","padding","textAlign","title","alignSelf","listitem","background","color","borderRadius","marginTop","backdrop","zIndex","drawer","App","Alert","props","elevation","variant","React","useState","open","setOpen","handleClose","event","reason","recycleStuff","garbageStuff","compStuff","scannedItems","Set","classes","webcam","setWebCam","webcamRef","useRef","runCoco","a","cocossd","net","console","log","handleCloseBackDrop","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","obj","textItem","forEach","prediction","includes","has","setRecycleItems","prev","setItem","add","setGarbageItem","setCompItem","garbageItems","recycleItems","compItems","openBackDrop","setBackDrop","handleOpenBackDrop","ThemeProvider","AppBar","Typography","style","CssBaseline","Backdrop","className","CircularProgress","Divider","Paper","marginLeft","Grid","justify","container","direction","item","xs","sm","Button","onClick","clear","severity","fill","Card","CardContent","map","val","List","maxHeight","overflow","ListItem","alignItems","ListItemAvatar","Avatar","paddingBottom","alt","src","BottleImg","ListItemText","paddingTop","bagImg","compImg","ref","muted","position","marginRight","right","zindex","Snackbar","autoHideDuration","onClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fce3f1e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bottle.277b44f5.png\";","export default __webpack_public_path__ + \"static/media/bag.e77bfba9.png\";","export default __webpack_public_path__ + \"static/media/compost.3bc742a8.png\";","\nimport React, { useRef, useEffect, useState } from 'react';\nimport { createMuiTheme, ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport { lightBlue, deepOrange } from '@material-ui/core/colors';\nimport { CircularProgress, AppBar, CssBaseline, Typography, Paper, Grid, Button, Divider, Card, CardContent, List, ListItem, Snackbar, ListItemText, ListItemAvatar, Avatar, Backdrop } from \"@material-ui/core\";\n\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { AlertTitle, Alert } from '@material-ui/lab';\nimport axios from 'axios';\nimport { Heading } from \"grommet\";\n\nimport Webcam from \"react-webcam\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\n\nimport \"@tensorflow/tfjs\";\nimport '@tensorflow/tfjs-core';\n// Adds the CPU backend to the global backend registry.\nimport '@tensorflow/tfjs-backend-cpu';\n\nimport BottleImg from \"./images/bottle.png\";\nimport bagImg from \"./images/bag.png\";\nimport compImg from \"./images/compost.png\";\n\nconst palletType = \"dark\"\nconst mainPrimaryColor = lightBlue[500];\nconst mainSecondaryColor = deepOrange[500];\n\nconst darkTheme = createMuiTheme({\n  palette: {\n\n    type: palletType,\n    primary: {\n      main: mainPrimaryColor,\n    },\n    secondary: {\n      main: mainSecondaryColor\n    },\n  },\n  typography: {\n    fontSize: \"15px\",\n    fontFamily: [\n      'monospace',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(1),\n    left: 0,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n\n  },\n  title: {\n    fontSize: 34,\n    alignSelf: \"center\",\n    textAlign: \"center\"\n  },\n  listitem: {\n    background: \"#303030\",\n    color: \"white\",\n    borderRadius: '10px',\n    marginTop: \"10px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst App = () => {\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  //HARDWARE WITH BACKEND ON - COMMENT THIS OUT IF YOU WANT TO DO THE BACKEND\n/*   const sendRecycleData = async () => {\n    return axios.post('http://localhost:8351/api/v1/post/recycle', {\n      uuid: 'Test'\n    })\n      .then((data) => {\n        setOpen(true);\n      }, (error) => {\n\n      });\n\n  }\n  const sendGarbageData = async () => {\n    return axios.post('http://localhost:8351/api/v1/post/garbage', {\n      uuid: 'Test'\n    })\n      .then((data) => {\n        setOpen(true);\n      }, (error) => {\n\n      });\n\n  }\n  const sendCompostData = async () => {\n    return axios.post('http://localhost:8351/api/v1/post/compost', {\n      uuid: 'Test'\n    })\n      .then((data) => {\n        setOpen(true);\n      }, (error) => {\n\n      });\n\n  } */\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const recycleStuff = ['bottle', 'book'];\n  const garbageStuff = ['cup', 'fork', 'spoon', 'chair'];\n  const compStuff = ['banana', 'apple', 'orange', 'sandwich', 'carrot'];\n\n  const scannedItems = new Set([])\n\n  const classes = useStyles();\n  const [webcam, setWebCam] = useState(false);\n\n  const enableWebcam = () => {\n    setWebCam(true)\n    runCoco()\n    handleOpenBackDrop()\n  }\n  const disablWebcam = () => {\n    setWebCam(false)\n  }\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n\n  // Main function\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Model Loaded\");\n    handleCloseBackDrop();\n    setInterval(() => {\n      detect(net);\n    }, 200);\n  };\n  //console.log(\"BEFORE\" + scannedItems)\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n      var textItem = '';\n      //drawRect(obj, ctx);\n      obj.forEach(prediction => {\n        textItem = prediction['class'];\n        if (recycleStuff.includes(textItem) && !scannedItems.has(textItem)) {\n          setRecycleItems((prev) => {\n            return [...prev, textItem]\n          });\n          setItem(\"\"); \n          //sendRecycleData(); // UN-COMMENT THIS OUT IF USING BACK END\n          setOpen(true); // COMMENT THIS OUT IF USING BACK END\n          scannedItems.add(textItem)\n        }\n        if (garbageStuff.includes(textItem) && !scannedItems.has(textItem)) {\n          setGarbageItem((prev) => {\n            return [...prev, textItem]\n          });\n          setItem(\"\");\n          //sendGarbageData();// UN-COMMENT THIS OUT IF USING BACK END\n          setOpen(true); // COMMENT THIS OUT IF USING BACK END\n          scannedItems.add(textItem)\n        }\n        if (compStuff.includes(textItem) && !scannedItems.has(textItem)) {\n          setCompItem((prev) => {\n            return [...prev, textItem]\n          });\n          setItem(\"\");\n          setOpen(true); // COMMENT THIS OUT IF USING BACK END\n          //sendCompostData(); // UN-COMMENT THIS OUT IF USING BACK END\n          scannedItems.add(textItem)\n        }\n      });\n      console.log(scannedItems)\n    }\n  };\n\n\n  const [item, setItem] = useState(\"\");\n  const [garbageItems, setGarbageItem] = useState([]);\n  const [recycleItems, setRecycleItems] = useState([]);\n  const [compItems, setCompItem] = useState([]);\n  const [openBackDrop, setBackDrop] = useState(false);\n\n  const handleCloseBackDrop = () => {\n    setBackDrop(false);\n  };\n  const handleOpenBackDrop = () => {\n    setBackDrop(!open);\n  };\n\n  const restUI = () => {\n    setGarbageItem([])\n    setRecycleItems([])\n    setCompItem([])\n    scannedItems.clear();\n  };\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <AppBar color=\"inherit\">\n        <Typography style={{ fontSize: \"34px\", alignSelf: \"center\", height: \"10%\", padding: \"20px 20px 20px\" }} variant=\"h3\">🗑️ TRASH SORTER 🗑️</Typography>\n      </AppBar>\n      <CssBaseline />\n      <Backdrop className={classes.backdrop} open={openBackDrop}>\n        <CircularProgress color=\"inherit\" /><Divider></Divider>\n        <Paper style={{ fontSize: \"28px\", color: \"#303030\", background: \"white\" }} className={classes.paper}>\n          Loading Models...\n        </Paper>\n      </Backdrop>\n      <Typography style={{ marginTop: 100, marginLeft: 20 }}>\n        <div className={classes.root}>\n          <Grid justify=\"space-between\" container spacing={1} direction=\"row\">\n            <Grid item spacing={3} container xs={12}>\n              {/* START/STOP */}\n              <Grid item xs={12} sm={6}>\n                <Paper style={{ color: \"#303030\", background: \"#f7d794\" }} className={classes.paper}>\n                  <Paper style={{ fontSize: \"28px\", color: \"white\", background: \"#303030\" }} className={classes.paper}>\n                    About Trash Sorter\n                  </Paper>\n                  <Paper style={{ margin: \"10px 0px 10px 0px\", padding: \"20px\", fontSize: \"14x\", color: \"white\" }}>\n                    <strong>Are you tired of seeing trash everywhere? Do you want to see a change in the world?</strong> Well, this is the right spot to start! Our project allows for the sorting of common waste. By utilizing Machine Learning through TensorFlow, we can easily detect if the object is categorized as trash. Using React.js as our Front-End and Node.js for the backend,  we have developed a cutting edge solution to this environmental problem. Using the power of Arduino, we have implemented seamless communication between our web application and backend to turn on LEDs for corresponding trash  (Recycle, Garbage, Compost).\n                  </Paper>\n                  <Grid item container xs={12}>\n                    <Grid item xs={12} sm={12} direction=\"row\">\n                      <div>\n                        {webcam == true ? (\n                          <Paper style={{ color: \"white\", background: \"#303030\" }} className={classes.paper}>\n                            <div className={classes.root}>\n\n                              <Button variant=\"contained\" color=\"secondary\" onClick={disablWebcam}>\n                                Stop\n                              </Button>\n                              <Button variant=\"contained\" color=\"primary\" onClick={restUI}>\n                                Reset\n                          </Button>\n                            </div>\n                          </Paper>\n                        ) : (\n                            <Paper style={{ color: \"white\", background: \"#303030\" }} className={classes.paper}>\n                              <Alert style={{ fontSize: \"20px\"}} severity=\"info\">Start using our Trash sorter by clicking start!</Alert>\n                            </Paper>\n                          )}\n                        {/* ... */}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Paper>\n                <Grid fill item spacing={1} container xs={12}>\n                  {/* Recycle */}\n                  <Grid item xs={12} sm={4} direction=\"row\">\n                    <Card className={classes.root} variant=\"outlined\">\n                      <CardContent>\n                        <Typography style={{ fontSize: '20px' }} className={classes.title} color=\"white\">\n                          ♻️ Recycling\n                 </Typography>\n                      </CardContent>\n                    </Card>\n                    <Paper style={{ color: \"#303030\", background: \"#0984e3\" }} className={classes.paper}>\n                      <div style={{ margin: '10px 5px ' }}>\n                        <center>\n                          {\n                            recycleItems.map((val) => {\n                              return (<List style={{ maxHeight: '100%', overflow: 'auto' }} className={classes.root}>\n                                <ListItem alignItems=\"flex-start\" className={classes.listitem}>\n                                  <ListItemAvatar>\n                                    <Avatar style={{ paddingBottom: \"8px\" }} alt=\"B\" src={BottleImg} />\n                                  </ListItemAvatar>\n                                  <ListItemText style={{ fontSize: \"25px\", paddingTop: \"1px\", }}\n                                    primary={val}\n                                  />\n                                </ListItem>\n                              </List>)\n                            })\n                          }\n                        </center>\n                      </div>\n                    </Paper>\n                  </Grid>\n                  {/* garbage */}\n                  <Grid item xs={12} sm={4} direction=\"row\">\n                    <Card className={classes.root} variant=\"outlined\">\n                      <CardContent>\n                        <Typography style={{ fontSize: '20px' }} className={classes.title} color=\"white\">\n                          🗑️ Garbage\n                 </Typography>\n                      </CardContent>\n                    </Card>\n                    <Paper style={{ color: \"#303030\", background: \"#e74c3c\" }} className={classes.paper} >\n                      <div style={{ margin: '10px 5px ' }}>\n                        <center>\n                          {\n                            garbageItems.map((val) => {\n                              return (<List style={{ maxHeight: '100%', overflow: 'auto' }} className={classes.root}>\n                                <ListItem alignItems=\"flex-start\" className={classes.listitem}>\n                                  <ListItemAvatar>\n                                    <Avatar style={{ paddingBottom: \"8px\" }} alt=\"Garbage\" src={bagImg} />\n                                  </ListItemAvatar>\n                                  <ListItemText style={{ fontSize: \"25px\", paddingTop: \"1px\" }}\n                                    primary={val}\n                                  />\n                                </ListItem>\n                              </List>)\n                            })\n                          }\n                        </center>\n                      </div>\n                    </Paper>\n                  </Grid>\n                  {/* bio */}\n                  <Grid item xs={12} sm={4}>\n                    <Card className={classes.root} variant=\"outlined\">\n                      <CardContent>\n                        <Typography style={{ fontSize: '20px' }} className={classes.title} color=\"white\">\n                        🍌 Compost\n                 </Typography>\n                      </CardContent>\n                    </Card>\n                    <Paper style={{ color: \"#303030\", background: \"#27ae60\" }} className={classes.paper}>\n                      <div style={{ margin: '10px 5px ' }}>\n                        <center>\n                          {\n                            compItems.map((val) => {\n                              return (<List style={{ maxHeight: '100%', overflow: 'auto' }} className={classes.root}>\n                                <ListItem alignItems=\"flex-start\" className={classes.listitem}>\n                                  <ListItemAvatar>\n                                    <Avatar style={{ paddingBottom: \"8px\" }} alt=\"compost icon\" src={compImg} />\n                                  </ListItemAvatar>\n                                  <ListItemText style={{ fontSize: \"25px\", paddingTop: \"1px\", }}\n                                    primary={val}\n                                  />\n                                </ListItem>\n                              </List>)\n                            })\n                          }\n                        </center>\n                      </div>\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {/* Camera */}\n              <Grid fill item xs={12} sm={6}>\n                <Paper style={{ color: \"#303030\", background: \"#00FFC2\" }} className={classes.paper}>\n                  <div>\n                    {webcam ? (\n                      <div className={classes.root}>\n                        <Webcam\n                          ref={webcamRef}\n                          muted={true}\n                          style={{\n                            position: \"relative\",\n                            marginLeft: \"auto\",\n                            marginRight: \"auto\",\n                            left: 0,\n                            right: 0,\n                            textAlign: \"center\",\n                            zindex: 9,\n                            width: '100%',\n                            height: 'auto',\n                          }}\n                        />\n                      </div>\n                    ) : (\n                        <Paper style={{ color: \"#303030\", background: \"#303030\" }} className={classes.paper}>\n                          <Button variant=\"contained\" color=\"primary\" onClick={enableWebcam}>\n                            Start\n                      </Button>\n                        </Paper>\n                      )}\n                    {/* ... */}\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n\n          </Grid>\n        </div>\n      </Typography>\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n        <Alert style={{ fontSize: '30px' }} onClose={handleClose} severity=\"success\">\n          Item Has been added and transmitted!\n        </Alert>\n      </Snackbar>\n    </ThemeProvider >\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}